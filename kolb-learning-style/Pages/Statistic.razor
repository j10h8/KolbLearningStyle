@page "/Statistic"
@inject IResultService ResultService
@inject IJSRuntime JSRuntime

<PageTitle>Statistik</PageTitle>
@if (loadingData)
{
	<div style="display:flex;justify-content:center;margin-top: 50px;">
		<div><div class="loading-spinner" ></div>Laddar statistik...</div>
	</div>

}
else if (labels != null && results != null && pieChartResult != null)
{
	<div style="display:flex;justify-content:center;">
		<div style="margin-top:4rem;margin-bottom: 1rem;display:flex;flex-direction:column;align-items:center;max-width:60rem;">
			<h1>Statistik</h1>
			<h4 style="max-width:60rem; color: black; text-align: center;" >Nedan följer statistik för @results.Count() genomförda tester. Siffrorna överst i varje kolumn motsvarar genomsnittet av hur de @results.Count() personer som har genomfört testet svarade.</h4>
			<div style="display:flex; margin-top:3rem;">
				<div class="result-text-container">
					<h3 style="text-align:center; color:red;">Genomsnittspoäng: @pieChartResult.Tester</h3>
					<h4 style="text-align:center;margin-bottom:20px;" ;>Prövare (AE)</h4>
					@*<ul>*@
						<p style="text-align: center">
							
							Är väldigt
							aktiv och
							handlingsinriktad och
							därför passar
							inte
							traditionella
							föreläsningar
							då man sitter
							still mycket.
						</p>
					@*	<hr>*@
					<p style="text-align: center">
							Personen i
							fråga vill
							arbeta
							praktiskt och
							hittar ofta
							nya sätt
							då han/hon
							kan använda
							sina nya
							kunskaper.
						</p style="text-align: center">
					@*	<hr>*@
						<p style="text-align: center">
							Prövaren styr
							sin
							upptäckarlust
							och lär sig
							genom
							experiment.
						</p>
					@*	<hr>*@
						<p style="text-align: center">
							Frågar sig:
							Om?
						</p>
					@*</ul>*@
				</div>
				<div class="result-text-container">
					<h3 style="text-align:center; color:red;">Genomsnittspoäng: @pieChartResult.IdeaGiver</h3>
					<h4 style="text-align:center; margin-bottom:15px;">Idégivare (KU)</h4>
					
						<p style="text-align: center">
							Vill gärna ha
							en
							känslomässig
							koppling till
							det som ska
							läras och vill
							veta varför
							man ska lära
							sig det som
							ska läras.
						</p>
						@*<hr>*@
						<p style="text-align: center">
							Idégivaren lär
							sig genom att
							uppleva saker
							och lär
							genom
							att se när
							andra arbetar
							praktiskt. Att
							se film är ett
							annat sätt
							som kan vara
							till bra hjälp.
						</p>
					@*	<hr>*@
						<p style="text-align: center">
							Idégivaren
							lär sig mest
							då han/hon
							har
							diskussioner
							med andra.
							
						</p>
				@*		<hr>*@
						<p style="text-align: center">
							Frågar sig:
							Varför?
						</p>
					
				</div>
				<div class="result-text-container">
					<h3 style="text-align:center; color:red;">Genomsnittspoäng: @pieChartResult.Gatherer</h3>
					<h4 style="text-align:center; margin-bottom:15px;">Sammanställare (AT)</h4>
					
						<p style="text-align: center">
							Tänker först och
							handlar därefter.
							Man vill ha den
							teoretiska
							bakgrunden
							först och därefter
							möjligtvis tillämpa
							kunskapen
							praktiskt.
						</p>
						<hr>
						<p style="text-align: center">
							Sammanställaren
							lär sig
							bäst då man
							börjar med att
							lyssna och att
							sedan få möjlighet
							att pröva och att
							få stenciler där
							allt står
							nedskrivet.
						</p>
						<hr>
						<p style="text-align: center">
							Frågar sig: Hur?
						</p>
					
				</div>
				<div class="result-text-container">
					<h3 style="text-align:center; color:red;">Genomsnittspoäng: @pieChartResult.Explainer</h3>
					<h4 style="text-align:center;margin-bottom:15px;">Förklarare (RO)</h4>
					
						<p style="text-align: center">
							Behöver ha
							teori och
							fakta och
							tänker
							igenom olika
							idéer och vill
							få fram vad
							som är viktigt.
						</p>
						<hr>
						<p style="text-align: center">
							Förklararen
							vill inte prova
							praktiskt utan
							läser hellre
							manualer.
						</p>
						<hr>
						<p style="text-align: center">
							Dessa elever
							klarar sig bra i
							skolan
							eftersom
							dagens skola
							har mycket
							lärarledda
							lektioner och
							föreläsningar.
						</p>
						<hr>
						<p style="text-align: center">
							Frågar sig:
							Vad?
						</p>
					
				</div>
			</div>
		<hr style="color: black">

			<h1 style="margin-top: 50px; margin-bottom: 20px;font-weight:bold;">Hur vanliga är lärstilarna?</h1>
			
					<PieChart Labels="@labels" Data="@data"></PieChart>
			
			
			
			<h1 style="margin-bottom: 20px; margin-top: 50px; font-weight:bold;">Genomsnittlig Lärstil</h1>
			<h4 style="margin-bottom:80px">
			Denna figur anger vilken inlärningsstil som är dominerande och hur starka de övriga stilarna är.
		</h4>

			<div style="max-width:60rem;flex-grow: 1; margin-bottom:50px;">
				<ResultCircle Result="pieChartResult"></ResultCircle>
				
			</div>
			
			<NavLink class="nav-link" href="/">
				<button class="btn btn-primary">GÅ TILLBAKA TILL STARTSIDAN</button>
			</NavLink>
		</div>
	</div>
}

<style>
	
	.center-container {
		padding: 220px;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 1200px; /* This will center-align vertically by using the full viewport height */
		text-align: center; /* This will center-align the text horizontally */
	}

</style>

@code {
	private List<ResultModel>? results;
	private int Index = -1;
	private string[]? labels { get; set; }
	private double[]? data { get; set; }
	private ResultModel? pieChartResult { get; set; }
	private bool loadingData = false;

	protected override void OnInitialized()
	{
		loadingData = true;
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			//loadingData = true;
			results = await ResultService.GetResultsAsync();

			pieChartResult = ResultService.GetPieChartResult(results);

			data = ResultService.CalculateProcentData(results);

			labels = new string[] { "Andel som är övervägande Idégivare", "Andel som är övervägande Prövare", "Andel som är övervägande Förklarare", "Andel som är övervägande Sammanställare" };

			await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "saveResultToDb", "False");
			loadingData = false;

			StateHasChanged();
		}
	}
}
