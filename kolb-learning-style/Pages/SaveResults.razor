@page "/SaveResults"
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<PageTitle>Do you want to save results?</PageTitle>

<div class="font-example">

	<div class="center-container">
		<h2><b>Vill du spara dina resultat i vår databas?</b></h2>
		<h1> ... </h1>
		<br />

		@*<NavLink class="nav-link" href="/">*@
		<button class="btn-cancel" @onclick="ShowConfirmationModal"> AVBRYT TESTET </button>
		@*</NavLink>*@
		<NavLink class="nav-link" href="TestPage">
			<button class="btn btn-primary" @onclick="StartTestWithoutValidation">NEJ, FORTSÄTT UTAN ATT SPARA</button>
		</NavLink>
		<h1> ... </h1>

		<button class="btn btn-primary" @onclick="StartTestWithValidation">JA, JAG ÄR OKEJ MED ATT DELA MINA RESULTAT MED VÄRLDEN</button>
		<span class="error-message">
			@errorMessage
		</span>
		<div class="checkbox-container">
			<input type="checkbox" id="confirmCheckbox" @bind="isCheckboxChecked" />
			<label for="confirmCheckbox">
				Jag bekräftar att jag har läst och accepterar webbplatsens <u>användningspolicy och sekretesspolicy</u>
			</label>
		</div>


		<br />
		<br />

	</div>
	@*<footer>
	<p>&copy; 2023 Kolb's "Learning Style" Test App. All rights reserved.</p>
	</footer>*@
</div>

<div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="confirmationModalLabel">Confirmation</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				Vill du avbryta testet?
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">TILLBAKA</button>
				<button type="button" class="btn btn-primary" data-dismiss="modal" @onclick="HandleConfirm">BEKRÄFTA</button>
			</div>
		</div>
	</div>
</div>

@code {
	private bool isCheckboxChecked;
	private string errorMessage = "";

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "saveResultToDb", "False");
		}
	}

	private async Task StartTestWithValidation()
	{
		if (!isCheckboxChecked)
		{
			errorMessage = "Du måste godkänna webbplatsens policy för att kunna fortsätta";
		}
		else
		{
			errorMessage = "";

			await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "saveResultToDb", "True");

			NavigationManager.NavigateTo("/TestPage");

		}
	}

	private async Task StartTestWithoutValidation()
	{
		errorMessage = "";

		await JSRuntime.InvokeVoidAsync("sessionStorage.setItem", "saveResultToDb", "False");

		NavigationManager.NavigateTo("/TestPage");
	}

	private async Task ShowConfirmationModal()
	{
		await JSRuntime.InvokeVoidAsync("showModal");
	}

	//private async Task ShowConfirmationModal()
	//{
	//	if (isModalInitialized)
	//	{
	//		await JSRuntime.InvokeVoidAsync("showModal");
	//	}
	//}

	private void HandleConfirm()
	{
		NavigationManager.NavigateTo("/");
	}
}

<style>
	.error-message {
		color: red;
		display: block;
		margin-top: 20px;
	}

	.center-container {
		padding: 200px;
		padding-top: 200px;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		height: 67vh;
		text-align: center;
		margin-top: 90px;
	}

	.right-container {
		display: flex;
		/*flex-direction: column;*/
		padding-right: 10px;
		align-items: end;
		justify-content: right;
		/*height: 78vh;
								text-align: center;  */
	}

	.checkbox-container {
		margin-top: 10px;
	}

		.checkbox-container input[type="checkbox"] {
			margin-right: 5px;
		}

	footer {
		background-color: #f8f8f8;
		padding-top: 20px;
		text-align: center;
	}

		footer p {
			color: #333;
		}
</style>